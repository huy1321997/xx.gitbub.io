{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./src/app/detail-job/apply-job/apply-job.component.html","webpack:///./src/app/detail-job/apply-job/apply-job.component.scss","webpack:///./src/app/detail-job/apply-job/apply-job.component.ts","webpack:///./src/app/detail-job/description-job/description-job.component.html","webpack:///./src/app/detail-job/description-job/description-job.component.scss","webpack:///./src/app/detail-job/description-job/description-job.component.ts","webpack:///./src/app/detail-job/detail-job-routing.module.ts","webpack:///./src/app/detail-job/detail-job.module.ts","webpack:///./src/app/detail-job/detail-job/detail-job.component.html","webpack:///./src/app/detail-job/detail-job/detail-job.component.scss","webpack:///./src/app/detail-job/detail-job/detail-job.component.ts","webpack:///./src/app/detail-job/info-job/info-job.component.html","webpack:///./src/app/detail-job/info-job/info-job.component.scss","webpack:///./src/app/detail-job/info-job/info-job.component.ts","webpack:///./src/app/detail-job/panel-job/panel-job.component.html","webpack:///./src/app/detail-job/panel-job/panel-job.component.scss","webpack:///./src/app/detail-job/panel-job/panel-job.component.ts","webpack:///./src/app/detail-job/similar-job/similar-job.component.html","webpack:///./src/app/detail-job/similar-job/similar-job.component.scss","webpack:///./src/app/detail-job/similar-job/similar-job.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE4E;AACd;AAC5B;AACkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,sDAAQ,gBAAgB,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oFAAoF;AACtH;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,mGAAmG,EAAE;AAC9I,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA,wBAAwB,yEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oDAAoD;AACtF;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbqDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA,iBAAiB,sEAAsE;AACvF;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,iFAAiF;AAClG;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEynB;AACznB;;;;;;;;;;;;;ACx2DA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAoC,G;;;;;;;;;;;ACNrD,+LAA+L,mBAAmB,2MAA2M,eAAe,wGAAwG,iVAAiV,cAAc,2MAA2M,uBAAuB,wHAAwH,wlBAAwlB,wBAAwB,6bAA6b,wBAAwB,y5CAAy5C,sF;;;;;;;;;;;ACA3qH,+DAA+D,mK;;;;;;;;;;;;;;;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","file":"detail-job-detail-job-module.js","sourcesContent":["/**\n * @license Angular v7.2.11\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __spread, __extends, __read } from 'tslib';\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated see https://angular.io/guide/http\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar ResponseContentType;\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseResponseOptions);\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp = __decorate([\n        Injectable()\n    ], BrowserJsonp);\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    JSONPConnection.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n    ], JSONPBackend);\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n            XSRFStrategy])\n    ], XHRBackend);\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseRequestOptions);\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Http);\n    return Http;\n}());\n/**\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Jsonp);\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                BrowserXhr,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                XHRBackend,\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n            ],\n        })\n    ], HttpModule);\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/api/common/http/HttpClient#jsonp\n * @publicApi\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                BrowserJsonp,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                JSONPBackend,\n            ],\n        })\n    ], JsonpModule);\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nvar VERSION = new Version('7.2.11');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","module.exports = \"<div *ngIf=\\\"infoJob && listCandidate \\\">\\n<div class=\\\"ui-g\\\">\\n  <div class=\\\"ui-g-12\\\">\\n    <div class=\\\"ui-g\\\">\\n      <div class=\\\"ui-g-12\\\" style=\\\"border: 1px solid;padding-left: 10px;\\\">\\n          <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-12\\\">\\n                  <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Bạn đang ứng tuyển cho vị trí\\n                      <strong>{{infoJob.title}}</strong><br>\\n                      <em class=\\\"small\\\" id=\\\"appPreferLanguage\\\" style=\\\"display: none;\\\">Nhà tuyển dụng ưu tiên hồ sơ ứng tuyển viết bằng tiếng <strong id=\\\"appPreferLanguageName\\\"></strong>.</em>\\n                  </h4>\\n              </div>\\n          </div>\\n          <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-10\\\">\\n                  <div class=\\\"ui-g-2\\\">\\n                      <img style=\\\"width: 70px;height: 70px;;\\\" src=\\\"http://ttgdnngdtxkbang.gialai.edu.vn/upload/19937/20170707/avatar65.jpg\\\">\\n                  </div>\\n                  <div class=\\\"ui-g-7\\\">\\n                      <span id=\\\"app-fullName\\\">{{listCandidate[0].name}}</span>\\n                      <div class=\\\"m-t-xs app-title\\\">\\n                          <a href=\\\"javascript:void(0);\\\" class=\\\"editable editable-click\\\" data-placeholder=\\\"Nhập chức danh của bạn\\\" tabindex=\\\"1\\\" id=\\\"app-title\\\" data-optional=\\\"1\\\">c#</a>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-10\\\">\\n                  <div class=\\\"ui-g-2\\\">\\n                      <label for=\\\"app-resume\\\" class=\\\"col-sm-3 col-xs-12 control-label\\\">Email</label>\\n                  </div>\\n                  <div class=\\\"ui-g-7\\\">\\n                      <div class=\\\"form-control-static\\\" id=\\\"app-email\\\">{{listCandidate[0].email}}</div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-10\\\">\\n                  <div class=\\\"ui-g-2\\\">\\n                      <label for=\\\"app-resume\\\" class=\\\"col-sm-3 col-xs-12 control-label\\\">Số điện thoại</label>\\n                  </div>\\n                  <div class=\\\"ui-g-7\\\">\\n                      <div class=\\\"form-control-static\\\" id=\\\"app-email\\\">{{listCandidate[0].phone}}</div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-10\\\">\\n                  <div class=\\\"ui-g-2\\\">\\n                      <label for=\\\"app-resume\\\" class=\\\"col-sm-3 col-xs-12 control-label\\\">Resume</label>\\n                  </div>\\n                  <div class=\\\"ui-g-7\\\">\\n                      <span>nguyen_huy.pdf</span>\\n                      <span class=\\\"small gray-light select-resume__hint\\\"> (Ngày cập nhật: 04/03/2019 15:12)</span>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"ui-g\\\">\\n              <p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\"></p-fileUpload>\\n\\n              <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n              <input type=\\\"file\\\"  (change)=\\\"changeListener($event)\\\">\\n          </div>\\n          <div class=\\\"ui-g\\\">\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"ApplyJob()\\\"   label=\\\"Yes\\\"></button>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-close\\\" (click)=\\\"Cancel()\\\" label=\\\"No\\\" class=\\\"ui-button-secondary\\\"></button>\\n          </div>\\n          \\n      </div>\\n      <div class=\\\"ui-g-1\\\">\\n          \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\\n\\n<!-- <input (change)=\\\"upload($event)\\\" multiple type=\\\"file\\\" /> -->\\n<embed style=\\\"width: 100%; height: 100%\\\" id=\\\"pdfDisplay\\\" [src]=\\\"imagePath1\\\" type=\\\"application/pdf\\\"/>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1qb2IvYXBwbHktam9iL2FwcGx5LWpvYi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { SaveJob } from 'src/app/models/saveJob';\n\n@Component({\n  selector: 'app-apply-job',\n  templateUrl: './apply-job.component.html',\n  styleUrls: ['./apply-job.component.scss']\n})\nexport class ApplyJobComponent implements OnInit {\n  @Input() listCandidate:any;\n  @Input() infoJob:any;\n  \n  @Output() applyJob = new EventEmitter<SaveJob>();\n\n  imagePath:any;\n  imagePath1:any;\n  image:string;\n  saveJob:SaveJob=new SaveJob();\n  constructor(private _sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n  \n  fileToUpload: File = null;//khai bao gia tri\n\n  handleFileInput(files: FileList) {\n    alert('cc');\n      // var file:File = inputValue.files[0];\n    var myReader:FileReader = new FileReader();\n    this.fileToUpload = files.item(0);\n    myReader.onloadend = (e) => {\n       this.image =myReader.result as string;\n     }\n     myReader.readAsDataURL(this.fileToUpload);\n    \n     myReader.onload = (): void => {\n       const base64String: string = (myReader.result as string).match(\n           /.+;base64,(.+)/\n       )[1];\n       \n      \n      this.imagePath=base64String;\n     };\n  }\n\n  changeListener($event) : void {\n     this.readThis($event.target);\n   }\n\n   readThis(inputValue: any): void {\n  //   alert(inputValue.files[0]);\n     var file:File = inputValue.files[0];\n     var myReader:FileReader = new FileReader();\n  \n     myReader.onloadend = (e) => {\n       this.image =myReader.result as string;\n     }\n     myReader.readAsDataURL(file);\n    \n     myReader.onload = (): void => {\n       const base64String: string = (myReader.result as string).match(\n           /.+;base64,(.+)/\n       )[1];\n  //     alert(base64String);\n       this.imagePath1 = this._sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \n                  + base64String);\n      this.imagePath=base64String;\n      // this.imagePath+=\"\";\n       //alert(this.imagePath+\"\");           \n     };\n    }\n\n    pdfSrc: string = '/pdf-test.pdf';\n    file:File;\n\n    upload(event) {\n    this.file = event.target.files[0];\n  }\n\n  ApplyJob()\n  {\n    //alert('co gang tao san du lieu tai day');\n    this.saveJob.filePdf=this.imagePath;\n    alert(this.imagePath);\n    this.saveJob.tinhTrang=0;\n    this.applyJob.emit(this.saveJob);\n    \n  }\n\n  Cancel()\n  {\n    alert('Huy thong tin tai day');\n  }\n\n    \n\n}\n","module.exports = \"<div class=\\\"ui-g\\\">\\n  <div class=\\\"ui-g-6 view\\\">\\n      <div class=\\\"ui-g\\\">\\n          <div class=\\\"ui-g-6\\\">\\n              <i class=\\\"fa fa-cloud icon-date-posted\\\"></i>\\n              <div class=\\\"bottom\\\">\\n                <span class=\\\"content-label\\\">Ngày Đăng Tuyển</span><br>\\n                <span class=\\\"content\\\">25/03/2019</span>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"ui-g\\\">\\n          <div class=\\\"ui-g-6\\\">\\n              <i class=\\\"fa fa-cloud icon-date-posted\\\"></i>\\n              <div class=\\\"bottom\\\">\\n                <span class=\\\"content-label\\\">CẤP BẬC</span><br>\\n                <span class=\\\"content\\\">IT - Phần mềm</span>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"ui-g\\\">\\n          <div class=\\\"ui-g-6\\\">\\n              <i class=\\\"fa fa-cloud icon-date-posted\\\"></i>\\n              <div class=\\\"bottom\\\">\\n                <span class=\\\"content-label\\\">KỸ NĂNG</span><br>\\n                <span class=\\\"content\\\">Unit Test, Java Core, Mysql, Java</span>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"ui-g\\\">\\n          <div class=\\\"ui-g-6\\\">\\n              <i class=\\\"fa fa-cloud icon-date-posted\\\"></i>\\n              <div class=\\\"bottom\\\">\\n                <span class=\\\"content-label\\\">NGÔN NGỮ TRÌNH BÀY HỒ SƠ</span><br>\\n                <span class=\\\"content\\\">Bất kỳ</span>\\n              </div>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\"","module.exports = \".icon-date-posted {\\n  background-image: url(https://images.vietnamworks.com/icon/icon-experience-layers.png);\\n  width: 25px;\\n  height: 25.5px;\\n  float: left;\\n  margin-right: 20px;\\n  margin-top: 5px; }\\n\\n.view {\\n  border: 1px solid;\\n  background-color: aqua;\\n  width: 586px;\\n  height: 238px; }\\n\\n.bottom {\\n  border-bottom: 1px solid;\\n  width: 290px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlsLWpvYi9kZXNjcmlwdGlvbi1qb2IvRTpcXFdlYk1WQ1xcRnJvbnRlbmRVSUhcXEZyb250ZW5kVUlIL3NyY1xcYXBwXFxkZXRhaWwtam9iXFxkZXNjcmlwdGlvbi1qb2JcXGRlc2NyaXB0aW9uLWpvYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHNGQUFzRjtFQUN0RixXQUFXO0VBQ1gsY0FBYztFQUNkLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZUFBZSxFQUFBOztBQUVuQjtFQUVJLGlCQUFpQjtFQUNqQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGFBQWEsRUFBQTs7QUFFakI7RUFFSSx3QkFBd0I7RUFDeEIsWUFBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGV0YWlsLWpvYi9kZXNjcmlwdGlvbi1qb2IvZGVzY3JpcHRpb24tam9iLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmljb24tZGF0ZS1wb3N0ZWRcclxue1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLnZpZXRuYW13b3Jrcy5jb20vaWNvbi9pY29uLWV4cGVyaWVuY2UtbGF5ZXJzLnBuZyk7XHJcbiAgICB3aWR0aDogMjVweDtcclxuICAgIGhlaWdodDogMjUuNXB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuLnZpZXdcclxue1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhO1xyXG4gICAgd2lkdGg6IDU4NnB4O1xyXG4gICAgaGVpZ2h0OiAyMzhweDtcclxufVxyXG4uYm90dG9tXHJcbntcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZDtcclxuICAgIHdpZHRoOjI5MHB4O1xyXG4gIFxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-description-job',\n  templateUrl: './description-job.component.html',\n  styleUrls: ['./description-job.component.scss']\n})\nexport class DescriptionJobComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetailJobComponent } from './detail-job/detail-job.component';\n\nconst routes: Routes = [\n  {path: '', component: DetailJobComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DetailJobRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { DetailJobRoutingModule } from './detail-job-routing.module';\nimport { PanelJobComponent } from './panel-job/panel-job.component';\nimport { DescriptionJobComponent } from './description-job/description-job.component';\nimport { InfoJobComponent } from './info-job/info-job.component';\nimport { DetailJobComponent } from './detail-job/detail-job.component';\nimport { SimilarJobComponent } from './similar-job/similar-job.component';\nimport {ButtonModule} from 'primeng/button';\nimport { ApplyJobComponent } from './apply-job/apply-job.component';\nimport {DialogModule} from 'primeng/dialog';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport { HttpClientModule } from '@angular/common/http'; import { HttpModule } from '@angular/http';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n\n@NgModule({\n  declarations: [PanelJobComponent, DescriptionJobComponent, InfoJobComponent, DetailJobComponent, SimilarJobComponent, ApplyJobComponent],\n  imports: [\n    CommonModule,\n    DetailJobRoutingModule,\n    ButtonModule,\n    DialogModule,\n    FileUploadModule,\n    HttpClientModule,\n    HttpModule,\n    PdfViewerModule\n    \n  ]\n})\nexport class DetailJobModule { }\n","module.exports = \"<div *ngFor=\\\"let item of listJob\\\">\\r\\n    <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n            <div class=\\\"ui-g\\\">\\r\\n                <div class=\\\"ui-g-1\\\">\\r\\n                        \\r\\n                </div>\\r\\n                <div class=\\\"ui-g-10\\\">\\r\\n                    <div class=\\\"ui-g\\\">\\r\\n                        <div class=\\\"ui-g-12\\\" style=\\\"background-color: dodgerblue;height: 100px;width: 1587px;\\\">\\r\\n                                <app-panel-job [item]=\\\"item\\\"></app-panel-job>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g\\\">\\r\\n                        <div class=\\\"ui-g-12 box-detail\\\" style=\\\"padding-top:100px\\\">\\r\\n                                <app-info-job  [item1]=\\\"item\\\"></app-info-job>\\r\\n                                <!-- <div class=\\\"desciption\\\" style=\\\"padding-top:96px;margin-left: 721px;\\\">\\r\\n                                     <app-description-job style=\\\"margin-top: 74px; margin-left: 46px;\\\"></app-description-job>\\r\\n                                </div>\\r\\n                                <div class=\\\"desciption1\\\" style=\\\"margin-top: -417px;margin-left: 721px;\\\">\\r\\n                                    <app-similar-job></app-similar-job> \\r\\n                                </div> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-1\\\">\\r\\n                        \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".desciption {\\n  float: left;\\n  margin-top: -782px;\\n  margin-left: 618px; }\\n\\n.desciption1 {\\n  float: left;\\n  margin-top: -367px;\\n  margin-left: 633px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlsLWpvYi9kZXRhaWwtam9iL0U6XFxXZWJNVkNcXEZyb250ZW5kVUlIXFxGcm9udGVuZFVJSC9zcmNcXGFwcFxcZGV0YWlsLWpvYlxcZGV0YWlsLWpvYlxcZGV0YWlsLWpvYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCLEVBQUE7O0FBRXRCO0VBRUksV0FBVztFQUNYLGtCQUFrQjtFQUNsQixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1qb2IvZGV0YWlsLWpvYi9kZXRhaWwtam9iLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlc2NpcHRpb25cclxue1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBtYXJnaW4tdG9wOiAtNzgycHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNjE4cHg7XHJcbn1cclxuLmRlc2NpcHRpb24xXHJcbntcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgbWFyZ2luLXRvcDogLTM2N3B4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDYzM3B4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { JobService } from 'src/app/service/job.service';\n\n@Component({\n  selector: 'app-detail-job',\n  templateUrl: './detail-job.component.html',\n  styleUrls: ['./detail-job.component.scss']\n})\nexport class DetailJobComponent implements OnInit {\n  id:any;\n  listJob:any[]=[];\n  constructor(private jobService: JobService,private _Activatedroute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.id=this._Activatedroute.snapshot.params['id'];\n   // alert('xuanVu'+this.id);\n    this.jobService.findJob(this.id)\n    .subscribe(res =>{\n      this.listJob=res;\n      console.log(res);\n   \n    });\n  }\n}\n\n\n\n//Android","module.exports = \"<div class=\\\"ui-g de\\\">\\n  <div class=\\\"ui-g-12 content\\\">\\n    <div class=\\\"ui-g\\\">\\n      <div class=\\\"ui-g-6\\\">\\n        <h3>Các Phúc Lợi Dành Cho Bạn</h3>\\n      </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n      <div class=\\\"ui-g-4 detail\\\" *ngIf=\\\"item1\\\">\\n          <ul>\\n              <li>{{item1.loiIch}}</li>\\n          </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n        <div class=\\\"ui-g-4\\\">\\n          <h3>Mô Tả Công Việc</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n        <div class=\\\"ui-g-4 detail\\\">\\n            <ul>\\n              <li>\\n                -\\t{{item1.yeuCau}}\\n              </li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n      <div class=\\\"ui-g-4\\\">\\n        <h3>Yêu Cầu Công Việc</h3>\\n      </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n        <div class=\\\"ui-g-6 detail\\\">\\n            <ul>\\n                <li>\\n                  -\\tCó kiến thức cơ bản về ngôn ngữ lập trình Java, ưu tiên các ứng viên đã có kinh nghiệm làm việc thực tế ít nhất 3 tháng trở lên.\\n                </li>\\n                <li>\\n                  -\\tTốt nghiệp đại học hoặc tương đương chuyên ngành Công nghệ thông tin/Điện tử viễn thông/Khoa học máy tính/Toán-Tin…\\n                </li>\\n                <li>\\n                  -\\tCó khả năng đọc hiểu các tài liệu chuyên ngành tiếng Anh.\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n        <div class=\\\"ui-g-6\\\">\\n            <h3>QUYỀN LỢI VÀ CHẾ ĐỘ ĐÃI NGỘ\\t</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g\\\">\\n        <div class=\\\"ui-g-4 detail\\\">\\n            <ul>\\n                <li>\\n                    {{item1.quyenLoi}}\\n                </li>\\n               \\n            </ul>\\n        </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".detail {\\n  margin-top: -17px;\\n  padding-left: 30px; }\\n\\n.content {\\n  border: 1px solid; }\\n\\n.de {\\n  background: #fff;\\n  margin: 28px auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlsLWpvYi9pbmZvLWpvYi9FOlxcV2ViTVZDXFxGcm9udGVuZFVJSFxcRnJvbnRlbmRVSUgvc3JjXFxhcHBcXGRldGFpbC1qb2JcXGluZm8tam9iXFxpbmZvLWpvYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFFdEI7RUFFSSxpQkFBaUIsRUFBQTs7QUFFckI7RUFDSSxnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kZXRhaWwtam9iL2luZm8tam9iL2luZm8tam9iLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRldGFpbFxyXG57XHJcbiAgICBtYXJnaW4tdG9wOiAtMTdweDtcclxuICAgIHBhZGRpbmctbGVmdDogMzBweDtcclxufVxyXG4uY29udGVudFxyXG57XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcclxufVxyXG4uZGV7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgbWFyZ2luOiAyOHB4IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-job',\n  templateUrl: './info-job.component.html',\n  styleUrls: ['./info-job.component.scss']\n})\nexport class InfoJobComponent implements OnInit {\n  @Input() item1:any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n<!-- <button (click)=\\\"XXX()\\\">XXXXXXXXXXXXXXX</button> -->\\n<div class=\\\"ui-g\\\" >\\n    <div class=\\\"ui-g-12\\\">\\n      <div class=\\\"ui-g \\\">\\n        <div class=\\\"ui-g-1\\\">\\n            \\n        </div>\\n        <div class=\\\"ui-g-10\\\">\\n            <div class=\\\"ui-g detail\\\" style=\\\"width: 1100px\\\">\\n                <div class=\\\"ui-g-2\\\">\\n                  <img  src=\\\"https://images.vietnamworks.com/pictureofcompany/49/10197315.jpg\\\" alt=\\\"Jobs FPT Software recruitment\\\" class=\\\"logo img-responsive\\\">\\n                </div>\\n                <div class=\\\"ui-g-8\\\">\\n                  <h2 class=\\\"job-title\\\">{{item.title}}</h2>\\n                  <!-- <a href=\\\"https://www.vietnamworks.com/jobs-at-fpt-software-e529938-en\\\" class=\\\"track-event\\\" data-evt-type=\\\"view-other-jobs\\\">\\n                    FPT SOFTWARE\\n                  </a> -->\\n                  <span class=\\\"gray-light m-l-xs m-r-xs hidden-xs\\\">-</span>\\n                  <span class=\\\"pr10\\\">Chuyên ngành:{{item.level}}</span>\\n                  <a class=\\\"pr10\\\" itemprop=\\\"address\\\" itemscope=\\\"\\\" itemtype=\\\"http://schema.org/PostalAddress\\\" href=\\\"https://www.vietnamworks.com/jobs-in-da-nang-v17-en\\\" title=\\\"Jobs in Da Nang\\\">Địa điểm:{{item.location}}</a>\\n                \\n                  <strong class=\\\"text-primary text-lg\\\"> Mức lương:{{item.maxSalary}}</strong><br>\\n                  \\n                  <span class=\\\"expiry gray-light\\\">Ngày đăng:{{item.endDate}}</span>\\n                \\n                </div>\\n                <div>\\n                    <div class=\\\"ui-g-6\\\" *ngIf=\\\"checkApply==true\\\">\\n                        <button pButton type=\\\"button\\\" label=\\\"Đã ứng tuyển\\\" style=\\\"width:120px;height:50px;margin-bottom:10px;margin-left:-32px;margin-top: 60px;\\\"></button>\\n  \\n                    </div>\\n                </div>\\n                <div style=\\\"margin-top: 40px;\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                   \\n\\n                    <div *ngIf=\\\"checkApply==false\\\">\\n                        <button pButton type=\\\"button\\\" label=\\\"Ưng tuyển\\\" style=\\\"width: 120px;height: 50px;margin-bottom: 10px;margin-left: -112px;\\\" (click)=\\\"showDialog()\\\" ></button>\\n                        <div *ngIf=\\\"checkSave==true\\\">\\n                          <button pButton type=\\\"button\\\" label=\\\"đã lưu việc làm\\\" style=\\\"width: 120px;height: 50px;margin-left: -112px;\\\"(click)=\\\"UnSaveWork()\\\" ></button>\\n                        </div>\\n                        <div *ngIf=\\\"checkSave==false\\\">\\n                          <button pButton  type=\\\"button\\\" label=\\\"Lưu việc làm\\\" style=\\\"width: 120px;height: 50px;margin-left: -112px;\\\" (click)=\\\"SaveWork()\\\"></button>\\n                        </div>\\n                    </div>\\n                    \\n                  <!-- <button pButton type=\\\"button\\\" label=\\\"Lưu việc làm\\\" style=\\\"width: 120px;height: 50px;margin-left: -112px;\\\" ></button> -->\\n                </div>\\n                </div>\\n               \\n\\n\\n\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-1\\\">\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\\n\\n<p-dialog header=\\\"Nộp CV\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [style]=\\\"{width: '800px', minWidth: '900px'}\\\" [minY]=\\\"70\\\" [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n        <app-apply-job (applyJob)=\\\"applyJob($event)\\\" [infoJob]=\\\"infoJob\\\" [listCandidate]=\\\"listCandidate\\\" ></app-apply-job>\\n        <p-footer>\\n        \\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"ApplyJob()\\\"   label=\\\"Yes\\\"></button>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-close\\\" (click)=\\\"display=false\\\" label=\\\"No\\\" class=\\\"ui-button-secondary\\\"></button>\\n        </p-footer>\\n</p-dialog>\\n\\n\\n\\n\"","module.exports = \".text-primary {\\n  color: #f7941d;\\n  font-weight: 400; }\\n\\n.gray-light {\\n  color: #999 !important; }\\n\\n.detail {\\n  background-color: antiquewhite; }\\n\\n.detail img {\\n  margin-top: 27px; }\\n\\n.pr10 {\\n  padding-right: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlsLWpvYi9wYW5lbC1qb2IvRTpcXFdlYk1WQ1xcRnJvbnRlbmRVSUhcXEZyb250ZW5kVUlIL3NyY1xcYXBwXFxkZXRhaWwtam9iXFxwYW5lbC1qb2JcXHBhbmVsLWpvYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGNBQWM7RUFDZCxnQkFBZ0IsRUFBQTs7QUFFcEI7RUFFSSxzQkFBcUIsRUFBQTs7QUFFekI7RUFFRyw4QkFBOEIsRUFBQTs7QUFHakM7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1qb2IvcGFuZWwtam9iL3BhbmVsLWpvYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LXByaW1hcnlcclxue1xyXG4gICAgY29sb3I6ICNmNzk0MWQ7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcbi5ncmF5LWxpZ2h0XHJcbntcclxuICAgIGNvbG9yOiAjOTk5IWltcG9ydGFudDtcclxufVxyXG4uZGV0YWlsXHJcbntcclxuICAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xyXG4gICAgXHJcbn1cclxuLmRldGFpbCBpbWd7XHJcbiAgICBtYXJnaW4tdG9wOiAyN3B4O1xyXG5cclxufVxyXG4ucHIxMHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { JobService } from 'src/app/service/job.service';\nimport { CandidateService } from 'src/app/service/candidate.service';\nimport { SaveJob } from 'src/app/models/saveJob';\nimport { SocketIoService } from 'src/app/service/socket-io.service';\n\n@Component({\n  selector: 'app-panel-job',\n  templateUrl: './panel-job.component.html',\n  styleUrls: ['./panel-job.component.scss']\n})\nexport class PanelJobComponent implements OnInit {\n  @Input() item:any;\n  checkSave=false;\n  checkApply=false;\n  display: boolean = false;\n  listCandidate:any;\n  infoJob:any;\n  conCac:any[]=[];\n  x:SaveJob;\n  y:SaveJob;\n  cv:string;\n\n  AJ:SaveJob;\n  Lisa:SaveJob;\n  constructor(private soketIo:SocketIoService,private jobService: JobService,private candidateService:CandidateService) { }\n\n  ngOnInit() {\n    this.AJ=new SaveJob();\n    this.Lisa=new SaveJob();\n    if(this.candidateService.IsLogged()==true)\n    {\n      this.x=new SaveJob();\n      this.x.idJob=this.item.idJob;\n      this.x.idUser=this.candidateService.getId();\n\n      this.jobService.checkSaveJob(this.x)\n      .subscribe(res =>{\n        if(res==\"OK\")\n        {\n          this.checkSave=true;\n        }\n        else\n        {\n          this.checkSave=false;\n        }\n      });\n\n\n      this.x=new SaveJob();\n      this.x.idJob=this.item.idJob;\n      this.x.idUser=this.candidateService.getId();\n      this.jobService.checkApplyJob(this.x)\n      .subscribe(res =>{\n        if(res==\"OK\")\n        {\n          this.checkApply=true;\n        }\n       });\n    }\n\n  \n\n\n  }\n\n  \n  showDialog() {\n    \n    if(this.candidateService.IsLogged()==true)\n    {\n     // this.display = true;\n     this.jobService.getInfoCandidate(this.candidateService.getId())\n     .subscribe(res =>{\n         console.log(res[0].xacNhan); \n         if(res[0].xacNhan==true)\n         {\n            this.jobService.getCV(this.candidateService.getId())\n            .subscribe(res =>{\n              this.cv=res;\n             // alert(this.cv);\n              this.AJ.idJob=this.item.idJob;\n              this.AJ.idUser=this.candidateService.getId();\n              this.AJ.tinhTrang=0;\n              this.AJ.filePdf=this.cv;\n              this.AJ.ApplyJob=true;\n               this.jobService.applyJob(this.AJ).subscribe(res =>{\n              this.checkSave=true;\n              this.checkApply=true;\n              alert('allpy thanh cong');\n              this.jobService.sendEmail(this.AJ)\n              .subscribe(res =>{\n                  \n              });\n              this.soketIo.emit(\"ApplyJob6\",\"1\");\n              });\n            });\n\n              \n              // this.jobService.applyJob(this.AJ).subscribe(res =>{\n              // this.checkSave=true;\n              // alert('allpy thanh cong');\n              // });\n          }\n         else{\n           alert('Vui long chờ xác nhận CV trước khi thực hiện nộp đơn');\n         }\n        \n     });\n      // this.jobService.getInfoCandidate(this.candidateService.getId())\n      // .subscribe(res =>{\n      //   this.listCandidate=res;\n        \n      // });\n    }\n    else\n    {\n      alert('Vui long dang nhap vap he thong');\n    }\n    this.infoJob=this.item;\n  }\n  ApplyJob()\n  {\n    if(this.candidateService.IsLogged()==true)\n    {\n      this.x=new SaveJob();\n      this.x.idJob=this.item.idJob;\n      this.x.idUser=this.candidateService.getId();\n      this.jobService.applyJob(this.x)\n      .subscribe(res =>{\n        alert(\"Nop don ung tuyen thanh cong\");\n        this.checkApply=true;\n       });\n    }\n    else\n    {\n      alert('Vui long dang nhap he thong');\n    }\n  }\n  SaveWork()\n  {\n    if(this.candidateService.IsLogged()==true)\n    {\n      this.x=new SaveJob();\n      this.x.idJob=this.item.idJob;\n      this.x.idUser=this.candidateService.getId();\n      this.jobService.saveJob(this.x)\n      .subscribe(res =>{\n        this.checkSave=true;\n      });\n    }\n    else\n    {\n      alert('Vui long dang nhap he thong');\n    }\n  }\n  UnSaveWork()\n  {\n    if(this.candidateService.IsLogged()==true)\n    {\n    this.x=new SaveJob();\n    this.x.idJob=this.item.idJob;\n    this.x.idUser=this.candidateService.getId();\n    this.jobService.unCheckSaveJob(this.x)\n    .subscribe(res =>{\n      this.checkSave=false;\n    });\n    }\n    else\n    {\n      alert('Vui long dang nhap vao he thong')\n    }\n  }\n  t:string;\n  applyJob(x:SaveJob)\n  {\n    //luc nay se dua du lieu vao trong he thong\n    this.AJ.idJob=this.item.idJob;\n    this.AJ.idUser=this.candidateService.getId();\n    this.AJ.tinhTrang=x.tinhTrang;\n    \n    this.AJ.filePdf=x.filePdf;\n    this.AJ.ApplyJob=true;\n    console.log(this.AJ);\n\n    // gui mail vs gia tri nay\n    this.jobService.sendEmail(this.AJ)\n    .subscribe(res =>{\n        \n    });\n\n\n    this.soketIo.emit(\"ApplyJob6\",\"1\");\n    \n\n     this.jobService.applyJob(this.AJ)\n     .subscribe(res =>{\n       this.checkSave=true;\n       alert('allpy thanh cong');\n       this.checkApply=true;\n     //  this.display=false;\n     });\n\n     \n    //  this.jobService.sendEmail(this.Lisa)\n    //  .subscribe(res =>{\n     \n    // });\n    \n\n  }\n  XXX()\n  {\n    this.soketIo.emit(\"ApplyJob6\",\"61\");\n    \n   // alert(\"conCac\");\n    this.Lisa=new SaveJob();\n    this.Lisa.idJob=6;\n    this.Lisa.idUser=1;\n    this.Lisa.filePdf=\"https://2sao.vietnamnetjsc.vn/images/2019/05/15/10/56/blackpink-ariana-grande-coachella.jpg\";\n    \n    this.jobService.sendEmail(this.Lisa)\n     .subscribe(res =>{\n     \n    });\n    \n  }\n\n\n}\n","module.exports = \"<div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-8 detail\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-8\\\">\\n              <h2 style=\\\"text-align: center;margin-left: 139px\\\">Công việc tương tự</h2>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g \\\">\\n            <div class=\\\"ui-g-8 mouse\\\">\\n                <img class=\\\"logo\\\" src=\\\"https://images.vietnamworks.com/pictureofcompany/36/10243665.png\\\" alt=\\\"Develop .Net &amp; Mobile (Up to 1250$)\\\">\\n                <div class=\\\"bottom top\\\">\\n                  <span class=\\\"content-label\\\">Develop .Net & Mobile (Up to 1250$)</span><br>\\n                  <span class=\\\"content\\\">Công Ty Cổ Phần Phúc Thành Việt Nam</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-8\\\">\\n                <img class=\\\"logo\\\" src=\\\"https://images.vietnamworks.com/pictureofcompany/f3/10778541.png\\\" alt=\\\"Tuyển Lập Trình C++/c# / Opencv\\\">\\n                <div class=\\\"bottom\\\">\\n                    <span class=\\\"content-label\\\">Tuyển Lập Trình C++/c# / Opencv</span><br>\\n                    <span class=\\\"content\\\">Trung Tâm Ứng Dụng Công Nghệ Thông Tin - Đại Học Quốc Gia Hà Nội</span>\\n                 </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-8\\\">\\n                <img class=\\\"img-responsive logo\\\" src=\\\"https://images.vietnamworks.com/pictureofcompany/05/10296743.png\\\" alt=\\\"[HCM &amp; HN] Senior Software Engineer (.NET)\\\">\\n                <div class=\\\"bottom\\\">\\n                    <span class=\\\"content-label\\\">[HCM & HN] Senior Software Engineer (.NET)</span><br>\\n                    <span class=\\\"content\\\">NashTech</span>\\n                 </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".logo {\\n  float: left;\\n  width: 100px;\\n  height: 50px;\\n  margin-top: -8px; }\\n\\n.detail {\\n  border: 1px solid;\\n  width: 570px; }\\n\\n.bottom {\\n  border-bottom: 1px solid;\\n  width: 545px;\\n  height: 76px; }\\n\\n.top {\\n  border-top: 1px solid;\\n  margin-top: -19px;\\n  padding-top: 14px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlsLWpvYi9zaW1pbGFyLWpvYi9FOlxcV2ViTVZDXFxGcm9udGVuZFVJSFxcRnJvbnRlbmRVSUgvc3JjXFxhcHBcXGRldGFpbC1qb2JcXHNpbWlsYXItam9iXFxzaW1pbGFyLWpvYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFdBQVc7RUFDWCxZQUFZO0VBQ1osWUFBWTtFQUNaLGdCQUFnQixFQUFBOztBQUVwQjtFQUVJLGlCQUFpQjtFQUNqQixZQUFZLEVBQUE7O0FBRWhCO0VBRUksd0JBQXdCO0VBQ3hCLFlBQVk7RUFDWixZQUFZLEVBQUE7O0FBRWhCO0VBRUkscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1qb2Ivc2ltaWxhci1qb2Ivc2ltaWxhci1qb2IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nb1xyXG57XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIG1hcmdpbi10b3A6IC04cHg7XHJcbn1cclxuLmRldGFpbFxyXG57XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcclxuICAgIHdpZHRoOiA1NzBweDtcclxufVxyXG4uYm90dG9tXHJcbntcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZDtcclxuICAgIHdpZHRoOiA1NDVweDtcclxuICAgIGhlaWdodDogNzZweDtcclxufVxyXG4udG9wXHJcbntcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZDtcclxuICAgIG1hcmdpbi10b3A6IC0xOXB4O1xyXG4gICAgcGFkZGluZy10b3A6IDE0cHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-similar-job',\n  templateUrl: './similar-job.component.html',\n  styleUrls: ['./similar-job.component.scss']\n})\nexport class SimilarJobComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}